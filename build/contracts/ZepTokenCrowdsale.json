{
  "contractName": "ZepTokenCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "checkRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_investorMinCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "_investorContributions",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROLE_WHITELISTED",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operators",
          "type": "address[]"
        }
      ],
      "name": "removeAddressesFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "removeAddressFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "addAddressToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "phase",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_investorMaxCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operators",
          "type": "address[]"
        }
      ],
      "name": "addAddressesToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "goal",
          "type": "uint256"
        },
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "contributor",
          "type": "address"
        }
      ],
      "name": "getUserContribution",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newPhase",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsalePhase",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526009805460ff19908116909155662386f26fc10000600c55680d8d726b7177a80000600d55600f805490911690553480156200003f57600080fd5b5060405160e08062001d3583398101604090815281516020830151918301516060840151608085015160a086015160c09096015160008054600160a060020a03191633178155949693949293919283908390839087908b908b908b908311620000a757600080fd5b600160a060020a0382161515620000bd57600080fd5b600160a060020a0381161515620000d357600080fd5b60049290925560038054600160a060020a03928316600160a060020a03199182161790915560028054929093169116179055600081116200011357600080fd5b600655428210156200012457600080fd5b818110156200013257600080fd5b600791909155600855600081116200014957600080fd5b600354600160a060020a03166200015f620001cc565b600160a060020a03909116815260405190819003602001906000f0801580156200018d573d6000803e3d6000fd5b50600b8054600160a060020a031916600160a060020a0392909216919091179055600a5583831115620001bf57600080fd5b50505050505050620001dd565b60405161075780620015de83390190565b6113f180620001ed6000396000f30060806040526004361061017c5763ffffffff60e060020a6000350416630988ca8c81146101875780630ff90285146101ee57806314b3e327146102155780631515bc2b1461023657806318b919e91461025f578063217fe6c6146102e957806324953eaa14610350578063286dd3f5146103a55780632c4e722e146103c6578063355274ea146103db57806340193883146103f05780634042b66f146104055780634b6753bc1461041a5780634bb278f31461042f5780634f93594514610444578063521eb27314610459578063715018a61461048a5780637b9417c81461049f5780637d3d6522146104c057806380d146f8146104d55780638d4e4083146104ed5780638da5cb5b146105025780639b19251a14610517578063b1c9fe6e14610538578063b5545a3c14610571578063b7a8807c14610586578063bb8b2b471461059b578063d7a026e7146105bc578063e2ec6ec3146105d1578063ec8ac4d814610626578063f2fde38b1461063a578063fc0c546a1461065b575b61018533610670565b005b34801561019357600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610185958335600160a060020a03169536956044949193909101919081908401838280828437509497506107129650505050505050565b3480156101fa57600080fd5b50610203610780565b60408051918252519081900360200190f35b34801561022157600080fd5b50610203600160a060020a0360043516610786565b34801561024257600080fd5b5061024b610798565b604080519115158252519081900360200190f35b34801561026b57600080fd5b506102746107a0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102ae578181015183820152602001610296565b50505050905090810190601f1680156102db5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102f557600080fd5b5060408051602060046024803582810135601f810185900485028601850190965285855261024b958335600160a060020a03169536956044949193909101919081908401838280828437509497506107c59650505050505050565b34801561035c57600080fd5b50604080516020600480358082013583810280860185019096528085526101859536959394602494938501929182918501908490808284375094975061083a9650505050505050565b3480156103b157600080fd5b50610185600160a060020a0360043516610887565b3480156103d257600080fd5b506102036108ce565b3480156103e757600080fd5b506102036108d4565b3480156103fc57600080fd5b506102036108da565b34801561041157600080fd5b506102036108e0565b34801561042657600080fd5b506102036108e6565b34801561043b57600080fd5b506101856108ec565b34801561045057600080fd5b5061024b610966565b34801561046557600080fd5b5061046e610971565b60408051600160a060020a039092168252519081900360200190f35b34801561049657600080fd5b50610185610980565b3480156104ab57600080fd5b50610185600160a060020a03600435166109ec565b3480156104cc57600080fd5b5061024b610a30565b3480156104e157600080fd5b50610185600435610a3b565b3480156104f957600080fd5b5061024b610ac4565b34801561050e57600080fd5b5061046e610acd565b34801561052357600080fd5b5061024b600160a060020a0360043516610adc565b34801561054457600080fd5b5061054d610b0b565b6040518082600181111561055d57fe5b60ff16815260200191505060405180910390f35b34801561057d57600080fd5b50610185610b14565b34801561059257600080fd5b50610203610bb6565b3480156105a757600080fd5b50610203600160a060020a0360043516610bbc565b3480156105c857600080fd5b50610203610bd7565b3480156105dd57600080fd5b506040805160206004803580820135838102808601850190965280855261018595369593946024949385019291829185019084908082843750949750610bdd9650505050505050565b610185600160a060020a0360043516610670565b34801561064657600080fd5b50610185600160a060020a0360043516610c2a565b34801561066757600080fd5b5061046e610c4a565b34600061067d8383610c59565b61068682610ccd565b60055490915061069c908363ffffffff610ce416565b6005556106a98382610cf1565b60408051838152602081018390528151600160a060020a0386169233927f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18929081900390910190a36106fb838361077c565b610703610cfb565b61070d838361077c565b505050565b61077c826001836040518082805190602001908083835b602083106107485780518252601f199092019160209182019101610729565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922092915050610d76565b5050565b600c5481565b600e6020526000908152604090205481565b600854421190565b60408051808201909152600981526000805160206113a6833981519152602082015281565b6000610831836001846040518082805190602001908083835b602083106107fd5780518252601f1990920191602091820191016107de565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922092915050610d8b565b90505b92915050565b60008054600160a060020a0316331461085257600080fd5b5060005b815181101561077c5761087f828281518110151561087057fe5b90602001906020020151610887565b600101610856565b600054600160a060020a0316331461089e57600080fd5b6108cb816040805190810160405280600981526020016000805160206113a6833981519152815250610daa565b50565b60045481565b60065481565b600a5481565b60055481565b60085481565b600054600160a060020a0316331461090357600080fd5b60095460ff161561091357600080fd5b61091b610798565b151561092657600080fd5b61092e610ebb565b6040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768190600090a16009805460ff19166001179055565b600654600554101590565b600354600160a060020a031681565b600054600160a060020a0316331461099757600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a03163314610a0357600080fd5b6108cb816040805190810160405280600981526020016000805160206113a6833981519152815250611017565b600a54600554101590565b600054600160a060020a03163314610a5257600080fd5b801515610a6857600f805460ff19169055610a7f565b8060011415610a7f57600f805460ff191660011790555b6000600f5460ff166001811115610a9257fe5b1415610aa25760fa6004556108cb565b6001600f5460ff166001811115610ab557fe5b14156108cb576101f460045550565b60095460ff1681565b600054600160a060020a031681565b6000610834826040805190810160405280600981526020016000805160206113a68339815191528152506107c5565b600f5460ff1681565b60095460ff161515610b2557600080fd5b610b2d610a30565b15610b3757600080fd5b600b54604080517f51cff8d90000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a03909216916351cff8d99160248082019260009290919082900301818387803b158015610b9c57600080fd5b505af1158015610bb0573d6000803e3d6000fd5b50505050565b60075481565b600160a060020a03166000908152600e602052604090205490565b600d5481565b60008054600160a060020a03163314610bf557600080fd5b5060005b815181101561077c57610c228282815181101515610c1357fe5b906020019060200201516109ec565b600101610bf9565b600054600160a060020a03163314610c4157600080fd5b6108cb816110e9565b600254600160a060020a031681565b600080610c668484611166565b600160a060020a0384166000908152600e60205260409020549150610c8b8284610ce4565b600c54909150811015610c9d57600080fd5b600d54811115610cac57600080fd5b600160a060020a039093166000908152600e60205260409020929092555050565b60006108346004548361119e90919063ffffffff16565b8181018281101561083457fe5b61077c82826111c7565b6000600f5460ff166001811115610d0e57fe5b1415610d5357600354604051600160a060020a03909116903480156108fc02916000818181858888f19350505050158015610d4d573d6000803e3d6000fd5b50610d74565b6001600f5460ff166001811115610d6657fe5b1415610d7457610d7461126d565b565b610d808282610d8b565b151561077c57600080fd5b600160a060020a03166000908152602091909152604090205460ff1690565b610e14826001836040518082805190602001908083835b60208310610de05780518252601f199092019160209182019101610dc1565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220929150506112ee565b81600160a060020a03167fd211483f91fc6eff862467f8de606587a30c8fc9981056f051b897a418df803a826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e7d578181015183820152602001610e65565b50505050905090810190601f168015610eaa5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b610ec3610a30565b15610fa357600b60009054906101000a9004600160a060020a0316600160a060020a03166343d726d66040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015610f1b57600080fd5b505af1158015610f2f573d6000803e3d6000fd5b50505050600b60009054906101000a9004600160a060020a0316600160a060020a0316639af6549a6040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015610f8657600080fd5b505af1158015610f9a573d6000803e3d6000fd5b5050505061100f565b600b60009054906101000a9004600160a060020a0316600160a060020a0316638c52dc416040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015610ff657600080fd5b505af115801561100a573d6000803e3d6000fd5b505050505b610d74610d74565b611081826001836040518082805190602001908083835b6020831061104d5780518252601f19909201916020918201910161102e565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922092915050611310565b81600160a060020a03167fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b7004898260405180806020018281038252838181518152602001915080519060200190808383600083811015610e7d578181015183820152602001610e65565b600160a060020a03811615156110fe57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b81611194816040805190810160405280600981526020016000805160206113a6833981519152815250610712565b61070d8383611335565b60008215156111af57506000610834565b508181028183828115156111bf57fe5b041461083457fe5b600254604080517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b15801561123657600080fd5b505af115801561124a573d6000803e3d6000fd5b505050506040513d602081101561126057600080fd5b5051151561077c57600080fd5b600b54604080517ff340fa010000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163f340fa01913491602480830192600092919082900301818588803b1580156112d357600080fd5b505af11580156112e7573d6000803e3d6000fd5b5050505050565b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600754421015801561134957506008544211155b151561135457600080fd5b61077c82826113638282611384565b600654600554611379908363ffffffff610ce416565b111561077c57600080fd5b600160a060020a038216151561139957600080fd5b80151561077c57600080fd0077686974656c6973740000000000000000000000000000000000000000000000a165627a7a723058201507dda22bd5871f82cad0598a87cd570402787443f1df2d77cd8af4be63e15a0029608060405234801561001057600080fd5b50604051602080610757833981016040525160008054600160a060020a03191633179055600160a060020a038116151561004957600080fd5b6002805460ff19600160a060020a03939093166101000261010060a860020a0319909116179190911690556106d4806100836000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338af3eed81146100be57806343d726d6146100ef57806351cff8d914610106578063685ca19414610127578063715018a61461015c5780638c52dc41146101715780638da5cb5b146101865780639af6549a1461019b578063c19d93fb146101b0578063e3a9db1a146101e9578063f2fde38b1461021c578063f340fa011461023d575b600080fd5b3480156100ca57600080fd5b506100d3610251565b60408051600160a060020a039092168252519081900360200190f35b3480156100fb57600080fd5b50610104610265565b005b34801561011257600080fd5b50610104600160a060020a03600435166102d0565b34801561013357600080fd5b50610148600160a060020a03600435166102f0565b604080519115158252519081900360200190f35b34801561016857600080fd5b5061010461030c565b34801561017d57600080fd5b50610104610378565b34801561019257600080fd5b506100d36103e4565b3480156101a757600080fd5b506101046103f3565b3480156101bc57600080fd5b506101c561044f565b604051808260028111156101d557fe5b60ff16815260200191505060405180910390f35b3480156101f557600080fd5b5061020a600160a060020a0360043516610458565b60408051918252519081900360200190f35b34801561022857600080fd5b50610104600160a060020a0360043516610473565b610104600160a060020a0360043516610493565b6002546101009004600160a060020a031681565b600054600160a060020a0316331461027c57600080fd5b60006002805460ff169081111561028f57fe5b1461029957600080fd5b6002805460ff1916811790556040517f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a90600090a1565b6102d9816102f0565b15156102e457600080fd5b6102ed816104b9565b50565b600060016002805460ff169081111561030557fe5b1492915050565b600054600160a060020a0316331461032357600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a0316331461038f57600080fd5b60006002805460ff16908111156103a257fe5b146103ac57600080fd5b6002805460ff191660011790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b600054600160a060020a031681565b6002805460ff168181111561040457fe5b1461040e57600080fd5b600254604051600160a060020a036101009092049190911690303180156108fc02916000818181858888f193505050501580156102ed573d6000803e3d6000fd5b60025460ff1681565b600160a060020a031660009081526001602052604090205490565b600054600160a060020a0316331461048a57600080fd5b6102ed8161057e565b60006002805460ff16908111156104a657fe5b146104b057600080fd5b6102ed816105fb565b60008054600160a060020a031633146104d157600080fd5b50600160a060020a03811660009081526001602052604090205430318111156104f657fe5b600160a060020a0382166000818152600160205260408082208290555183156108fc0291849190818181858888f1935050505015801561053a573d6000803e3d6000fd5b50604080518281529051600160a060020a038416917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a25050565b600160a060020a038116151561059357600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008054600160a060020a0316331461061357600080fd5b50600160a060020a038116600090815260016020526040902054349061063f908263ffffffff61069516565b600160a060020a038316600081815260016020908152604091829020939093558051848152905191927f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c492918290030190a25050565b818101828110156106a257fe5b929150505600a165627a7a723058206a163c863dc945ba4ed9a8104ed4166eebab79afdbc9677de48facea640d65830029",
  "deployedBytecode": "",
  "sourceMap": "811:3626:0:-;;;358:31:5;;;-1:-1:-1;;358:31:5;;;;;;1078:17:0;1045:50;;1144:21;1111:54;;1365:51;;;;;;;;1873:337;5:2:-1;;;;30:1;27;20:12;5:2;1873:337:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:5:12;:18;;-1:-1:-1;;;;;;567:18:12;575:10;567:18;;;1873:337:0;;;;;;;;;;;;;;;;;;;;;;2014:9:4;;2006:18;;;;;;-1:-1:-1;;;;;2038:21:4;;;;2030:30;;;;;;-1:-1:-1;;;;;2074:20:4;;;;2066:29;;;;;;2102:4;:12;;;;2120:6;:16;;-1:-1:-1;;;;;2120:16:4;;;-1:-1:-1;;;;;;2120:16:4;;;;;;;2142:5;:14;;;;;;;;;;;-1:-1:-1;465:8:8;;457:17;;;;;;480:3;:10;886:15:9;870:31;;;862:40;;;;;;916:28;;;;908:37;;;;;;952:11;:26;;;;984:11;:26;-1:-1:-1;709:9:6;;701:18;;;;;;751:6;;-1:-1:-1;;;;;751:6:6;734:24;;:::i;:::-;-1:-1:-1;;;;;734:24:6;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;725:6:6;:33;;-1:-1:-1;;;;;;725:33:6;-1:-1:-1;;;;;725:33:6;;;;;;;;;;764:4;:12;2193:11:0;;;;2185:20;;;;;;1873:337;;;;;;;811:3626;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "811:3626:0:-;;;;;;;;;-1:-1:-1;;;811:3626:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2391:21:4;2401:10;2391:9;:21::i;:::-;811:3626:0;837:114:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;837:114:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;837:114:2;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;837:114:2;;-1:-1:-1;837:114:2;;-1:-1:-1;;;;;;;837:114:2;1045:50:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1045:50:0;;;;;;;;;;;;;;;;;;;;1180:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1180:57:0;-1:-1:-1;;;;;1180:57:0;;;;;1169:153:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1169:153:9;;;;;;;;;;;;;;;;;;;;;;340:53:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;340:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;340:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1091:136:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1091:136:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1091:136:2;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1091:136:2;;-1:-1:-1;1091:136:2;;-1:-1:-1;;;;;;;1091:136:2;2129:201:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2129:201:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2129:201:1;;-1:-1:-1;2129:201:1;;-1:-1:-1;;;;;;;2129:201:1;1756:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1756:132:1;-1:-1:-1;;;;;1756:132:1;;;;;1304:19:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:19:4;;;;252:18:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:18:8;;;;452:19:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;452:19:6;;;;1354:24:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:24:4;;;;292:26:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:26:9;;;;560:163:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:163:5;;;;603:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;603:83:8;;;;1002:21:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1002:21:4;;;;;;;;-1:-1:-1;;;;;1002:21:4;;;;;;;;;;;;;;1001:111:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:12;;;;790:124:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;790:124:1;-1:-1:-1;;;;;790:124:1;;;;;1106:85:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1106:85:6;;;;3694:450:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3694:450:0;;;;;358:31:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:31:5;;;;238:20:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:12;;;;987:133:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;987:133:1;-1:-1:-1;;;;;987:133:1;;;;;1365:51:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1365:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:124:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;869:124:6;;;;262:26:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:26:9;;;;3403:139:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3403:139:0;-1:-1:-1;;;;;3403:139:0;;;;;1111:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1111:54:0;;;;1338:191:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1338:191:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1338:191:1;;-1:-1:-1;1338:191:1;;-1:-1:-1;;;;;;;1338:191:1;2553:577:4;;-1:-1:-1;;;;;2553:577:4;;;;;1274:103:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:12;-1:-1:-1;;;;;1274:103:12;;;;;940:18:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;940:18:4;;;;2553:577;2636:9;2616:17;2651:45;2672:12;2636:9;2651:20;:45::i;:::-;2764:26;2780:9;2764:15;:26::i;:::-;2829:9;;2747:43;;-1:-1:-1;2829:24:4;;2843:9;2829:24;:13;:24;:::i;:::-;2817:9;:36;2860:38;2877:12;2891:6;2860:16;:38::i;:::-;2909:88;;;;;;;;;;;;;;-1:-1:-1;;;;;2909:88:4;;;2930:10;;2909:88;;;;;;;;;;;3004:47;3027:12;3041:9;3004:22;:47::i;:::-;3058:15;:13;:15::i;:::-;3079:46;3101:12;3115:9;3079:21;:46::i;:::-;2553:577;;;:::o;837:114:2:-;917:29;936:9;917:5;923;917:12;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;917:12:2;;;;;-1:-1:-1;917:12:2;;;;;;;;;;;;-1:-1:-1;;917:18:2;:29::i;:::-;837:114;;:::o;1045:50:0:-;;;;:::o;1180:57::-;;;;;;;;;;;;;:::o;1169:153:9:-;1306:11;;1288:15;:29;1169:153;:::o;340:53:1:-;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;340:53:1;;;;;:::o;1091:136:2:-;1174:4;1195:27;1212:9;1195:5;1201;1195:12;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1195:12:2;;;;;-1:-1:-1;1195:12:2;;;;;;;;;;;;-1:-1:-1;;1195:16:2;:27::i;:::-;1188:34;;1091:136;;;;;:::o;2129:201:1:-;2227:9;719:5:12;;-1:-1:-1;;;;;719:5:12;705:10;:19;697:28;;;;;;-1:-1:-1;2239:1:1;2222:104;2246:10;:17;2242:1;:21;2222:104;;;2278:41;2305:10;2316:1;2305:13;;;;;;;;;;;;;;;;;;2278:26;:41::i;:::-;2265:3;;2222:104;;1756:132;719:5:12;;-1:-1:-1;;;;;719:5:12;705:10;:19;697:28;;;;;;1844:39:1;1855:9;1866:16;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1866:16:1;;;1844:10;:39::i;:::-;1756:132;:::o;1304:19:4:-;;;;:::o;252:18:8:-;;;;:::o;452:19:6:-;;;;:::o;1354:24:4:-;;;;:::o;292:26:9:-;;;;:::o;560:163:5:-;719:5:12;;-1:-1:-1;;;;;719:5:12;705:10;:19;697:28;;;;;;612:11:5;;;;611:12;603:21;;;;;;638:11;:9;:11::i;:::-;630:20;;;;;;;;657:14;:12;:14::i;:::-;682:11;;;;;;;700;:18;;-1:-1:-1;;700:18:5;714:4;700:18;;;560:163::o;603:83:8:-;678:3;;665:9;;:16;;603:83;:::o;1002:21:4:-;;;-1:-1:-1;;;;;1002:21:4;;:::o;1001:111:12:-;719:5;;-1:-1:-1;;;;;719:5:12;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:12;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:12;;;1001:111::o;790:124:1:-;719:5:12;;-1:-1:-1;;;;;719:5:12;705:10;:19;697:28;;;;;;873:36:1;881:9;892:16;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;892:16:1;;;873:7;:36::i;1106:85:6:-;1182:4;;1169:9;;:17;;1106:85;:::o;3694:450:0:-;719:5:12;;-1:-1:-1;;;;;719:5:12;705:10;:19;697:28;;;;;;3764:39:0;;3761:189;;;3813:5;:29;;-1:-1:-1;;3813:29:0;;;3761:189;;;3893:8;3864:24;3859:42;3855:95;;;3911:5;:32;;-1:-1:-1;;3911:32:0;3919:24;3911:32;;;3855:95;4018:21;4009:5;;;;;:30;;;;;;;;4006:134;;;4056:3;4049:4;:10;4006:134;;;4089:24;4080:5;;;;;:33;;;;;;;;4076:64;;;4130:3;4123:4;:10;3694:450;:::o;358:31:5:-;;;;;;:::o;238:20:12:-;;;-1:-1:-1;;;;;238:20:12;;:::o;987:133:1:-;1058:4;1079:36;1087:9;1098:16;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1098:16:1;;;1079:7;:36::i;1365:51:0:-;;;;;;:::o;869:124:6:-;913:11;;;;905:20;;;;;;;;940:13;:11;:13::i;:::-;939:14;931:23;;;;;;961:6;;:27;;;;;;977:10;961:27;;;;;;-1:-1:-1;;;;;961:6:6;;;;:15;;:27;;;;;:6;;:27;;;;;;;;:6;;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;961:27:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;961:27:6;;;;869:124::o;262:26:9:-;;;;:::o;3403:139:0:-;-1:-1:-1;;;;;3501:35:0;3477:7;3501:35;;;:22;:35;;;;;;;3403:139::o;1111:54::-;;;;:::o;1338:191:1:-;1431:9;719:5:12;;-1:-1:-1;;;;;719:5:12;705:10;:19;697:28;;;;;;-1:-1:-1;1443:1:1;1426:99;1450:10;:17;1446:1;:21;1426:99;;;1482:36;1504:10;1515:1;1504:13;;;;;;;;;;;;;;;;;;1482:21;:36::i;:::-;1469:3;;1426:99;;1274:103:12;719:5;;-1:-1:-1;;;;;719:5:12;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;940:18:4:-;;;-1:-1:-1;;;;;940:18:4;;:::o;2636:461:0:-;2790:29;2863:23;2734:50;2761:11;2774:9;2734:26;:50::i;:::-;-1:-1:-1;;;;;2822:35:0;;;;;;:22;:35;;;;;;;-1:-1:-1;2889:46:0;2822:35;2925:9;2889:12;:46::i;:::-;2968:15;;2863:72;;-1:-1:-1;2949:34:0;;;2941:43;;;;;;3017:15;;2998:34;;;2990:43;;;;;;-1:-1:-1;;;;;3039:35:0;;;;;;;:22;:35;;;;;:53;;;;-1:-1:-1;;2636:461:0:o;5796:121:4:-;5868:7;5892:20;5907:4;;5892:10;:14;;:20;;;;:::i;1238:128:11:-;1319:7;;;1339;;;;1332:15;;;5024:150:4;5127:42;5142:12;5156;5127:14;:42::i;4232:202:0:-;4285:21;4276:5;;;;;:30;;;;;;;;4273:157;;;4316:6;;:26;;-1:-1:-1;;;;;4316:6:0;;;;4332:9;4316:26;;;;;:6;:26;:6;:26;4332:9;4316:6;:26;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4316:26:0;4273:157;;;4368:24;4359:5;;;;;:33;;;;;;;;4355:75;;;4402:21;:19;:21::i;:::-;4232:202::o;666:111:3:-;754:17;758:5;765;754:3;:17::i;:::-;746:26;;;;;;;855:128;-1:-1:-1;;;;;959:19:3;938:4;959:19;;;;;;;;;;;;;;;855:128::o;1613:149:2:-;1687:30;1707:9;1687:5;1693;1687:12;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1687:12:2;;;;;-1:-1:-1;1687:12:2;;;;;;;;;;;;-1:-1:-1;;1687:19:2;:30::i;:::-;1740:9;-1:-1:-1;;;;;1728:29:2;;1751:5;1728:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1728:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:149;;:::o;1278:197:6:-;1321:13;:11;:13::i;:::-;1317:127;;;1344:6;;;;;;;;;-1:-1:-1;;;;;1344:6:6;-1:-1:-1;;;;;1344:12:6;;:14;;;;;-1:-1:-1;;;1344:14:6;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1344:14:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1344:14:6;;;;1366:6;;;;;;;;;-1:-1:-1;;;;;1366:6:6;-1:-1:-1;;;;;1366:26:6;;:28;;;;;-1:-1:-1;;;1366:28:6;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1366:28:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1366:28:6;;;;1317:127;;;1415:6;;;;;;;;;-1:-1:-1;;;;;1415:6:6;-1:-1:-1;;;;;1415:20:6;;:22;;;;;-1:-1:-1;;;1415:22:6;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1415:22:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1415:22:6;;;;1317:127;1450:20;:18;:20::i;1347:141:2:-;1418:27;1435:9;1418:5;1424;1418:12;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1418:12:2;;;;;-1:-1:-1;1418:12:2;;;;;;;;;;;;-1:-1:-1;;1418:16:2;:27::i;:::-;1466:9;-1:-1:-1;;;;;1456:27:2;;1477:5;1456:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1512:171:12;-1:-1:-1;;;;;1582:23:12;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:12;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:12;-1:-1:-1;;;;;1661:17:12;;;;;;;;;;1512:171::o;434:198:10:-;553:12;541:38:1;551:9;562:16;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;562:16:1;;;541:9;:38::i;:::-;575:52:10;602:12;616:10;575:26;:52::i;203:380:11:-;263:9;489:7;;485:36;;;-1:-1:-1;513:1:11;506:8;;485:36;-1:-1:-1;531:7:11;;;536:2;531;:7;551:6;;;;;;;;:12;544:20;;;503:246:7;703:5;;681:62;;;;;;-1:-1:-1;;;;;681:62:7;;;;;;;;;;;;;;;703:5;;;;;681:34;;:62;;;;;;;;;;;;;;703:5;;681:62;;;5:2:-1;;;;30:1;27;20:12;5:2;681:62:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;681:62:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;681:62:7;673:71;;;;;;;1563:88:6;1603:6;;:43;;;;;;1635:10;1603:43;;;;;;-1:-1:-1;;;;;1603:6:6;;;;:14;;1624:9;;1603:43;;;;;:6;;:43;;;;;;;1624:9;1603:6;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;1603:43:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1603:43:6;;;;;1563:88::o;486:104:3:-;-1:-1:-1;;;;;558:19:3;580:5;558:19;;;;;;;;;;;:27;;-1:-1:-1;;558:27:3;;;486:104::o;321:100::-;-1:-1:-1;;;;;390:19:3;:12;:19;;;;;;;;;;;:26;;-1:-1:-1;;390:26:3;412:4;390:26;;;321:100::o;1504:180:9:-;499:11;;480:15;:30;;:64;;;;;533:11;;514:15;:30;;480:64;472:73;;;;;;;;1627:52;1654:12;1668:10;977:52:8;1004:12;1018:10;977:26;:52::i;:::-;1072:3;;1043:9;;:25;;1057:10;1043:25;:13;:25;:::i;:::-;:32;;1035:41;;;;;3779:175:4;-1:-1:-1;;;;;3892:26:4;;;;3884:35;;;;;;3933:15;;;3925:24;;;;",
  "source": "/**\n * @title ZepTokenCrowdsale.sol\n * @dev This is the crowd sale contract that will sell the ZepTokens.  It uses the\n * Crowdsale capabilities provided by openzeppelin-solidity.\n * It can also be used with other MintableTokens.\n */\n\npragma solidity ^0.4.24;\n\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract ZepTokenCrowdsale is Crowdsale, MintedCrowdsale, CappedCrowdsale, TimedCrowdsale, WhitelistedCrowdsale, RefundableCrowdsale\n{\n\n  // Set investor limits.  Min and max on an aggregate basis.\n  // Track limits in the mapping.\n  uint256 public _investorMinCap = 10000000000000000; // 0.01 ETH\n  uint256 public _investorMaxCap = 250000000000000000000; // 250 ETH\n  mapping(address => uint256) public _investorContributions;\n\n  // Crowdsale will run through serval phases.  Keep track of this in an enum.\n  enum CrowdsalePhase { PreICO, PublicICO }\n  CrowdsalePhase public phase = CrowdsalePhase.PreICO;\n\n  /**\n   *  @dev Constructor Constructor does nothing except call into constructors it inherits from.\n   *  @param rate conversion rate between ETH and this token.\n   *  @param wallet address for creator of the crowdsale\n   *  @param token the ERC20 token this crowdsale will manage and create\n   *  @param cap Maximum number of tokens that can be created.\n   *  @param goal Minimum amount to be raised for the crowdsale to complete successfully\n   */\n  constructor(\n    uint256 rate,\n    address wallet,\n    ERC20 token,\n    uint256 cap,\n    uint256 goal,\n    uint256 openingTime,\n    uint256 closingTime\n  )\n    Crowdsale(rate, wallet, token)\n    CappedCrowdsale(cap)\n    TimedCrowdsale(openingTime, closingTime)\n    RefundableCrowdsale(goal)\n    public\n  {\n      require(goal <= cap);\n  }\n\n  /**\n   *  @dev _preValidatePurchase Extends validation of parent\n   *  Add additional validation with a minimum and maximum contribution allows\n   *  from each of the investors.  The mapping _investorContributions keeps track\n   *  of how much each investor address has contributed.\n   *  @param beneficiary address trying to purchase tokens\n   *  @param weiAmount amount the beneficiary is attempting to purchase\n   */\n  function _preValidatePurchase(\n    address beneficiary,\n    uint weiAmount\n    ) internal\n  {\n    super._preValidatePurchase(beneficiary, weiAmount);\n    uint256 existingContributions = _investorContributions[beneficiary];\n    uint256 newContribution = SafeMath.add(existingContributions, weiAmount);\n    require(newContribution >= _investorMinCap);\n    require(newContribution <= _investorMaxCap);\n    _investorContributions[beneficiary] = newContribution;\n  }\n\n  /**\n   *  @dev getUserContribution Provides access to how much an address has contributed to this crowdsale\n   *  @param contributor Address of entity (validated seperately via KYC portal) that contributed to the crowd sale.\n   *  @return Amount of tokens the contributor has purchased so far.\n   */\n  function getUserContribution(address contributor)\n    public view returns(uint256)\n  {\n    return(_investorContributions[contributor]);\n  }\n\n  /**\n   *  @dev setCrowdsalePhase Allows an admin to change which phase of the ICO we are in\n   *  @param newPhase you want the ICO to be in\n   */\n  function setCrowdsalePhase(uint newPhase) onlyOwner public\n  {\n    if(uint(CrowdsalePhase.PreICO) == newPhase) {\n      phase = CrowdsalePhase.PreICO;\n    } else if (uint(CrowdsalePhase.PublicICO) == newPhase) {\n      phase = CrowdsalePhase.PublicICO;\n    }\n    // Pre ICO rate is better than the public rate\n    if(phase == CrowdsalePhase.PreICO) {\n      rate = 250;\n    }\n    else if (phase == CrowdsalePhase.PublicICO) {\n      rate = 500;\n    }\n  }\n\n  /**\n   * @dev Overrides Crowdsale fund forwarding, sending funds to escrow.\n   */\n  function _forwardFunds() internal {\n\n    if(phase == CrowdsalePhase.PreICO) {\n      wallet.transfer(msg.value);\n    } else if (phase == CrowdsalePhase.PublicICO) {\n      super._forwardFunds();\n    }\n  }\n\n} // End of contract ZepTokenCrowdsale\n",
  "sourcePath": "/Users/yglm/Documents/Development/Ethereum/DappUniversity/ZepCoin/contracts/ZepTokenCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/yglm/Documents/Development/Ethereum/DappUniversity/ZepCoin/contracts/ZepTokenCrowdsale.sol",
    "exportedSymbols": {
      "ZepTokenCrowdsale": [
        219
      ]
    },
    "id": 220,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "235:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 743,
        "src": "261:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 932,
        "src": "327:80:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 994,
        "src": "408:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 1108,
        "src": "491:87:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 905,
        "src": "579:88:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 1081,
        "src": "668:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 1202,
        "src": "750:59:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 742,
              "src": "841:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$742",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "841:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 931,
              "src": "852:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$931",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "852:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 993,
              "src": "869:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$993",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "869:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1080,
              "src": "886:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1080",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "886:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17,
              "name": "WhitelistedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1107,
              "src": "902:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedCrowdsale_$1107",
                "typeString": "contract WhitelistedCrowdsale"
              }
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "902:20:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 904,
              "src": "924:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$904",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "924:19:0"
          }
        ],
        "contractDependencies": [
          337,
          444,
          742,
          790,
          904,
          931,
          993,
          1080,
          1107,
          1287
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 219,
        "linearizedBaseContracts": [
          219,
          904,
          790,
          1107,
          1080,
          993,
          931,
          742,
          337,
          444,
          1287
        ],
        "name": "ZepTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23,
            "name": "_investorMinCap",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "1045:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1045:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030303030303030303030303030",
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1078:17:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "10000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 26,
            "name": "_investorMaxCap",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "1111:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1111:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323530303030303030303030303030303030303030",
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1144:21:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_250000000000000000000_by_1",
                "typeString": "int_const 250000000000000000000"
              },
              "value": "250000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 30,
            "name": "_investorContributions",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "1180:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1188:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1180:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 28,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1199:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "ZepTokenCrowdsale.CrowdsalePhase",
            "id": 33,
            "members": [
              {
                "id": 31,
                "name": "PreICO",
                "nodeType": "EnumValue",
                "src": "1343:6:0"
              },
              {
                "id": 32,
                "name": "PublicICO",
                "nodeType": "EnumValue",
                "src": "1351:9:0"
              }
            ],
            "name": "CrowdsalePhase",
            "nodeType": "EnumDefinition",
            "src": "1321:41:0"
          },
          {
            "constant": false,
            "id": 37,
            "name": "phase",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "1365:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
            },
            "typeName": {
              "contractScope": null,
              "id": 34,
              "name": "CrowdsalePhase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 33,
              "src": "1365:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 35,
                "name": "CrowdsalePhase",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 33,
                "src": "1395:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                  "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                }
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "PreICO",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1395:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "2177:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2193:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2201:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2193:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2167,
                        2168
                      ],
                      "referencedDeclaration": 2167,
                      "src": "2185:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2185:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:20:0"
                }
              ]
            },
            "documentation": " @dev Constructor Constructor does nothing except call into constructors it inherits from.\n @param rate conversion rate between ETH and this token.\n @param wallet address for creator of the crowdsale\n @param token the ERC20 token this crowdsale will manage and create\n @param cap Maximum number of tokens that can be created.\n @param goal Minimum amount to be raised for the crowdsale to complete successfully",
            "id": 76,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 54,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39,
                    "src": "2043:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 55,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "2049:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 56,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "2057:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1702",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 53,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 742,
                  "src": "2033:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$742_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2033:30:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "2084:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 60,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 993,
                  "src": "2068:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$993_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2068:20:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 62,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "2108:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 63,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51,
                    "src": "2121:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 64,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 61,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1080,
                  "src": "2093:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1080_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2093:40:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 66,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "2158:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 67,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 65,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 904,
                  "src": "2138:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$904_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2138:25:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1890:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1890:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1908:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1928:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1702",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 42,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1702,
                    "src": "1928:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1702",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1945:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1962:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1980:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "2005:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1884:144:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2177:0:0"
            },
            "scope": 219,
            "src": "1873:337:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "2728:369:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2761:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2774:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2220,
                        "src": "2734:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ZepTokenCrowdsale_$219",
                          "typeString": "contract super ZepTokenCrowdsale"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1106,
                      "src": "2734:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2734:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:50:0"
                },
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "existingContributions",
                      "nodeType": "VariableDeclaration",
                      "scope": 123,
                      "src": "2790:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2790:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "_investorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2822:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 94,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2845:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2822:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2790:67:0"
                },
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "name": "newContribution",
                      "nodeType": "VariableDeclaration",
                      "scope": 123,
                      "src": "2863:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2863:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 103,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "existingContributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "2902:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2925:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "2889:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1201_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1200,
                      "src": "2889:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2889:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2863:72:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "newContribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "2949:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 106,
                          "name": "_investorMinCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2968:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2949:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2167,
                        2168
                      ],
                      "referencedDeclaration": 2167,
                      "src": "2941:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "newContribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "2998:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "_investorMaxCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "3017:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2998:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2167,
                        2168
                      ],
                      "referencedDeclaration": 2167,
                      "src": "2990:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2990:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "_investorContributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "3039:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 118,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "3062:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3039:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 119,
                      "name": "newContribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "3077:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3039:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "3039:53:0"
                }
              ]
            },
            "documentation": " @dev _preValidatePurchase Extends validation of parent\n Add additional validation with a minimum and maximum contribution allows\n from each of the investors.  The mapping _investorContributions keeps track\n of how much each investor address has contributed.\n @param beneficiary address trying to purchase tokens\n @param weiAmount amount the beneficiary is attempting to purchase",
            "id": 123,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2671:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2671:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2696:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2696:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2665:51:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:0:0"
            },
            "scope": 219,
            "src": "2636:461:0",
            "stateMutability": "nonpayable",
            "superFunction": 1106,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "3488:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "_investorContributions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "3501:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 132,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "contributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "3524:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3501:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 133,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3500:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 134,
                  "nodeType": "Return",
                  "src": "3494:43:0"
                }
              ]
            },
            "documentation": " @dev getUserContribution Provides access to how much an address has contributed to this crowdsale\n @param contributor Address of entity (validated seperately via KYC portal) that contributed to the crowd sale.\n @return Amount of tokens the contributor has purchased so far.",
            "id": 136,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getUserContribution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3432:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3431:21:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3477:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3477:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3476:9:0"
            },
            "scope": 219,
            "src": "3403:139:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "3755:389:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 144,
                            "name": "CrowdsalePhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "3769:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                              "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PreICO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3769:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        ],
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3764:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3764:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "newPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3795:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3764:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 156,
                              "name": "CrowdsalePhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "3864:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                                "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                              }
                            },
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PublicICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3864:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          ],
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3859:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3859:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "newPhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "3893:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3859:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 167,
                    "nodeType": "IfStatement",
                    "src": "3855:95:0",
                    "trueBody": {
                      "id": 166,
                      "nodeType": "Block",
                      "src": "3903:47:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "phase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "3911:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 162,
                                "name": "CrowdsalePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33,
                                "src": "3919:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                                  "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                                }
                              },
                              "id": 163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PublicICO",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3919:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                              }
                            },
                            "src": "3911:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "id": 165,
                          "nodeType": "ExpressionStatement",
                          "src": "3911:32:0"
                        }
                      ]
                    }
                  },
                  "id": 168,
                  "nodeType": "IfStatement",
                  "src": "3761:189:0",
                  "trueBody": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "3805:44:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 149,
                            "name": "phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "3813:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 150,
                              "name": "CrowdsalePhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "3821:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                                "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PreICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3821:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "src": "3813:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "3813:29:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                      "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4009:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "CrowdsalePhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4018:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                          "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4018:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "src": "4009:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 178,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4080:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 179,
                          "name": "CrowdsalePhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "4089:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                            "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PublicICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4089:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "src": "4080:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 187,
                    "nodeType": "IfStatement",
                    "src": "4076:64:0",
                    "trueBody": {
                      "id": 186,
                      "nodeType": "Block",
                      "src": "4115:25:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 182,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "4123:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "353030",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4130:3:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              "value": "500"
                            },
                            "src": "4123:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 185,
                          "nodeType": "ExpressionStatement",
                          "src": "4123:10:0"
                        }
                      ]
                    }
                  },
                  "id": 188,
                  "nodeType": "IfStatement",
                  "src": "4006:134:0",
                  "trueBody": {
                    "id": 177,
                    "nodeType": "Block",
                    "src": "4041:25:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 173,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "4049:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "323530",
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4056:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_250_by_1",
                              "typeString": "int_const 250"
                            },
                            "value": "250"
                          },
                          "src": "4049:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 176,
                        "nodeType": "ExpressionStatement",
                        "src": "4049:10:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": " @dev setCrowdsalePhase Allows an admin to change which phase of the ICO we are in\n @param newPhase you want the ICO to be in",
            "id": 190,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 140,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1235,
                  "src": "3736:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3736:9:0"
              }
            ],
            "name": "setCrowdsalePhase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "newPhase",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3721:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3721:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3720:15:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3755:0:0"
            },
            "scope": 219,
            "src": "3694:450:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "4266:168:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                      "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4276:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 194,
                        "name": "CrowdsalePhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4285:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                          "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4285:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "src": "4276:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4359:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 206,
                          "name": "CrowdsalePhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "4368:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                            "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PublicICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4368:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "src": "4359:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 215,
                    "nodeType": "IfStatement",
                    "src": "4355:75:0",
                    "trueBody": {
                      "id": 214,
                      "nodeType": "Block",
                      "src": "4394:36:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 209,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2220,
                                "src": "4402:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_ZepTokenCrowdsale_$219",
                                  "typeString": "contract super ZepTokenCrowdsale"
                                }
                              },
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_forwardFunds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 903,
                              "src": "4402:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4402:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 213,
                          "nodeType": "ExpressionStatement",
                          "src": "4402:21:0"
                        }
                      ]
                    }
                  },
                  "id": 216,
                  "nodeType": "IfStatement",
                  "src": "4273:157:0",
                  "trueBody": {
                    "id": 204,
                    "nodeType": "Block",
                    "src": "4308:41:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 200,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2164,
                                "src": "4332:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4332:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "4316:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4316:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4316:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 203,
                        "nodeType": "ExpressionStatement",
                        "src": "4316:26:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Overrides Crowdsale fund forwarding, sending funds to escrow.",
            "id": 218,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4254:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4266:0:0"
            },
            "scope": 219,
            "src": "4232:202:0",
            "stateMutability": "nonpayable",
            "superFunction": 903,
            "visibility": "internal"
          }
        ],
        "scope": 220,
        "src": "811:3626:0"
      }
    ],
    "src": "235:4240:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/yglm/Documents/Development/Ethereum/DappUniversity/ZepCoin/contracts/ZepTokenCrowdsale.sol",
    "exportedSymbols": {
      "ZepTokenCrowdsale": [
        219
      ]
    },
    "id": 220,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "235:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 743,
        "src": "261:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 932,
        "src": "327:80:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 994,
        "src": "408:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 1108,
        "src": "491:87:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 905,
        "src": "579:88:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 1081,
        "src": "668:81:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 220,
        "sourceUnit": 1202,
        "src": "750:59:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 742,
              "src": "841:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$742",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "841:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 931,
              "src": "852:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$931",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "852:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 993,
              "src": "869:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$993",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "869:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1080,
              "src": "886:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1080",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "886:14:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17,
              "name": "WhitelistedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1107,
              "src": "902:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedCrowdsale_$1107",
                "typeString": "contract WhitelistedCrowdsale"
              }
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "902:20:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 904,
              "src": "924:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$904",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "924:19:0"
          }
        ],
        "contractDependencies": [
          337,
          444,
          742,
          790,
          904,
          931,
          993,
          1080,
          1107,
          1287
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 219,
        "linearizedBaseContracts": [
          219,
          904,
          790,
          1107,
          1080,
          993,
          931,
          742,
          337,
          444,
          1287
        ],
        "name": "ZepTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23,
            "name": "_investorMinCap",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "1045:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1045:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030303030303030303030303030",
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1078:17:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "10000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 26,
            "name": "_investorMaxCap",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "1111:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1111:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323530303030303030303030303030303030303030",
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1144:21:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_250000000000000000000_by_1",
                "typeString": "int_const 250000000000000000000"
              },
              "value": "250000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 30,
            "name": "_investorContributions",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "1180:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1188:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1180:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 28,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1199:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "ZepTokenCrowdsale.CrowdsalePhase",
            "id": 33,
            "members": [
              {
                "id": 31,
                "name": "PreICO",
                "nodeType": "EnumValue",
                "src": "1343:6:0"
              },
              {
                "id": 32,
                "name": "PublicICO",
                "nodeType": "EnumValue",
                "src": "1351:9:0"
              }
            ],
            "name": "CrowdsalePhase",
            "nodeType": "EnumDefinition",
            "src": "1321:41:0"
          },
          {
            "constant": false,
            "id": 37,
            "name": "phase",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "1365:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
            },
            "typeName": {
              "contractScope": null,
              "id": 34,
              "name": "CrowdsalePhase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 33,
              "src": "1365:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 35,
                "name": "CrowdsalePhase",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 33,
                "src": "1395:14:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                  "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                }
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "PreICO",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1395:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "2177:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "2193:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2201:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2193:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2167,
                        2168
                      ],
                      "referencedDeclaration": 2167,
                      "src": "2185:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2185:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:20:0"
                }
              ]
            },
            "documentation": " @dev Constructor Constructor does nothing except call into constructors it inherits from.\n @param rate conversion rate between ETH and this token.\n @param wallet address for creator of the crowdsale\n @param token the ERC20 token this crowdsale will manage and create\n @param cap Maximum number of tokens that can be created.\n @param goal Minimum amount to be raised for the crowdsale to complete successfully",
            "id": 76,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 54,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39,
                    "src": "2043:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 55,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "2049:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 56,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "2057:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1702",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 53,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 742,
                  "src": "2033:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$742_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2033:30:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 59,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "2084:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 60,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 993,
                  "src": "2068:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$993_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2068:20:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 62,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "2108:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 63,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51,
                    "src": "2121:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 64,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 61,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1080,
                  "src": "2093:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1080_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2093:40:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 66,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "2158:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 67,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 65,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 904,
                  "src": "2138:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$904_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2138:25:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1890:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1890:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1908:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1928:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1702",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 42,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1702,
                    "src": "1928:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1702",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1945:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1962:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1980:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "2005:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1884:144:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2177:0:0"
            },
            "scope": 219,
            "src": "1873:337:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "2728:369:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2761:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2774:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2220,
                        "src": "2734:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ZepTokenCrowdsale_$219",
                          "typeString": "contract super ZepTokenCrowdsale"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1106,
                      "src": "2734:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2734:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:50:0"
                },
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "existingContributions",
                      "nodeType": "VariableDeclaration",
                      "scope": 123,
                      "src": "2790:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2790:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "_investorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2822:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 94,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2845:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2822:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2790:67:0"
                },
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "name": "newContribution",
                      "nodeType": "VariableDeclaration",
                      "scope": 123,
                      "src": "2863:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2863:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 103,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "existingContributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "2902:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2925:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "2889:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$1201_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1200,
                      "src": "2889:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2889:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2863:72:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "newContribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "2949:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 106,
                          "name": "_investorMinCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2968:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2949:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2167,
                        2168
                      ],
                      "referencedDeclaration": 2167,
                      "src": "2941:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "newContribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "2998:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "_investorMaxCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "3017:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2998:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2167,
                        2168
                      ],
                      "referencedDeclaration": 2167,
                      "src": "2990:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2990:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "_investorContributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "3039:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 118,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "3062:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3039:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 119,
                      "name": "newContribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "3077:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3039:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "3039:53:0"
                }
              ]
            },
            "documentation": " @dev _preValidatePurchase Extends validation of parent\n Add additional validation with a minimum and maximum contribution allows\n from each of the investors.  The mapping _investorContributions keeps track\n of how much each investor address has contributed.\n @param beneficiary address trying to purchase tokens\n @param weiAmount amount the beneficiary is attempting to purchase",
            "id": 123,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2671:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2671:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2696:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2696:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2665:51:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:0:0"
            },
            "scope": 219,
            "src": "2636:461:0",
            "stateMutability": "nonpayable",
            "superFunction": 1106,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "3488:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "_investorContributions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "3501:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 132,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "contributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "3524:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3501:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 133,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3500:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 134,
                  "nodeType": "Return",
                  "src": "3494:43:0"
                }
              ]
            },
            "documentation": " @dev getUserContribution Provides access to how much an address has contributed to this crowdsale\n @param contributor Address of entity (validated seperately via KYC portal) that contributed to the crowd sale.\n @return Amount of tokens the contributor has purchased so far.",
            "id": 136,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getUserContribution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "name": "contributor",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3432:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3431:21:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3477:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3477:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3476:9:0"
            },
            "scope": 219,
            "src": "3403:139:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "3755:389:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 144,
                            "name": "CrowdsalePhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "3769:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                              "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PreICO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3769:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        ],
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3764:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3764:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "newPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3795:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3764:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 156,
                              "name": "CrowdsalePhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "3864:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                                "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                              }
                            },
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PublicICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3864:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          ],
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3859:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3859:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "newPhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "3893:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3859:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 167,
                    "nodeType": "IfStatement",
                    "src": "3855:95:0",
                    "trueBody": {
                      "id": 166,
                      "nodeType": "Block",
                      "src": "3903:47:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "phase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "3911:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 162,
                                "name": "CrowdsalePhase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33,
                                "src": "3919:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                                  "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                                }
                              },
                              "id": 163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PublicICO",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3919:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                                "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                              }
                            },
                            "src": "3911:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "id": 165,
                          "nodeType": "ExpressionStatement",
                          "src": "3911:32:0"
                        }
                      ]
                    }
                  },
                  "id": 168,
                  "nodeType": "IfStatement",
                  "src": "3761:189:0",
                  "trueBody": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "3805:44:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 149,
                            "name": "phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "3813:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 150,
                              "name": "CrowdsalePhase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "3821:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                                "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PreICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3821:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                              "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                            }
                          },
                          "src": "3813:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                            "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "3813:29:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                      "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4009:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "CrowdsalePhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4018:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                          "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4018:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "src": "4009:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 178,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4080:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 179,
                          "name": "CrowdsalePhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "4089:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                            "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PublicICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4089:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "src": "4080:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 187,
                    "nodeType": "IfStatement",
                    "src": "4076:64:0",
                    "trueBody": {
                      "id": 186,
                      "nodeType": "Block",
                      "src": "4115:25:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 182,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "4123:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "353030",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4130:3:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              "value": "500"
                            },
                            "src": "4123:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 185,
                          "nodeType": "ExpressionStatement",
                          "src": "4123:10:0"
                        }
                      ]
                    }
                  },
                  "id": 188,
                  "nodeType": "IfStatement",
                  "src": "4006:134:0",
                  "trueBody": {
                    "id": 177,
                    "nodeType": "Block",
                    "src": "4041:25:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 173,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "4049:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "323530",
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4056:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_250_by_1",
                              "typeString": "int_const 250"
                            },
                            "value": "250"
                          },
                          "src": "4049:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 176,
                        "nodeType": "ExpressionStatement",
                        "src": "4049:10:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": " @dev setCrowdsalePhase Allows an admin to change which phase of the ICO we are in\n @param newPhase you want the ICO to be in",
            "id": 190,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 140,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1235,
                  "src": "3736:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3736:9:0"
              }
            ],
            "name": "setCrowdsalePhase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "newPhase",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3721:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3721:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3720:15:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3755:0:0"
            },
            "scope": 219,
            "src": "3694:450:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "4266:168:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                      "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4276:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 194,
                        "name": "CrowdsalePhase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4285:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                          "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4285:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      }
                    },
                    "src": "4276:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                        "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4359:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 206,
                          "name": "CrowdsalePhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "4368:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsalePhase_$33_$",
                            "typeString": "type(enum ZepTokenCrowdsale.CrowdsalePhase)"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PublicICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4368:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsalePhase_$33",
                          "typeString": "enum ZepTokenCrowdsale.CrowdsalePhase"
                        }
                      },
                      "src": "4359:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 215,
                    "nodeType": "IfStatement",
                    "src": "4355:75:0",
                    "trueBody": {
                      "id": 214,
                      "nodeType": "Block",
                      "src": "4394:36:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 209,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2220,
                                "src": "4402:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_ZepTokenCrowdsale_$219",
                                  "typeString": "contract super ZepTokenCrowdsale"
                                }
                              },
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_forwardFunds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 903,
                              "src": "4402:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4402:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 213,
                          "nodeType": "ExpressionStatement",
                          "src": "4402:21:0"
                        }
                      ]
                    }
                  },
                  "id": 216,
                  "nodeType": "IfStatement",
                  "src": "4273:157:0",
                  "trueBody": {
                    "id": 204,
                    "nodeType": "Block",
                    "src": "4308:41:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 200,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2164,
                                "src": "4332:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4332:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "4316:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4316:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4316:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 203,
                        "nodeType": "ExpressionStatement",
                        "src": "4316:26:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Overrides Crowdsale fund forwarding, sending funds to escrow.",
            "id": 218,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4254:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4266:0:0"
            },
            "scope": 219,
            "src": "4232:202:0",
            "stateMutability": "nonpayable",
            "superFunction": 903,
            "visibility": "internal"
          }
        ],
        "scope": 220,
        "src": "811:3626:0"
      }
    ],
    "src": "235:4240:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-19T19:27:33.276Z"
}